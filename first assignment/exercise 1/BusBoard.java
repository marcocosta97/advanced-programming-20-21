/*
 *
 */
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Graphical dashboard exploiting the Bus and CovidController Beans.
 * It provides a text field where to see the number of passengers and an
 *  input field where to increase the value.
 * 
 * @author Marco Costa
 */
public class BusBoard extends javax.swing.JFrame {
    
    /**
     * Registering a Property Change Listener in order to update graphically
     * if the door is open or not and the number of passengers
     */
    private final PropertyChangeListener propertyListener = (PropertyChangeEvent arg0) -> {
        String propertyName = arg0.getPropertyName();
        
        if (propertyName.equals("doorOpen"))
            BusBoard.getInstance().setIsDoorOpen((boolean) arg0.getNewValue());
        else if (propertyName.equals("numPassengers"))
            BusBoard.getInstance().setNumPassengers((int) arg0.getNewValue());
    };
    
    /* defining the class as a Singleton object */
    private static BusBoard instance = null;
    
    // private Bus bus;
    // private CovidController covidController;
    
    /**
     * Creates a new BusBoard form
     */
    public BusBoard() {
        instance = this;
        this.setResizable(false);
        initComponents();
        bus.addPropertyChangeListener(propertyListener);
        bus.activate(); /* starting the `activate` loop */
    }
    
    /**
     * Returning the instance of the frame if any, otherwise creates one.
     * 
     * @return the singleton instance
     */
    private static BusBoard getInstance() {
        if (instance == null) new BusBoard();
        
        return instance;
    }

    /**
     * Sets the "door open" label on the frame.
     * 
     * @param b true if the door is open, false otherwise
     */
    private void setIsDoorOpen(boolean b) {
        if (b) this.isDoorOpenLabel.setText("Yes");
        else this.isDoorOpenLabel.setText("No");
        
        isDoorOpenLabel.paintImmediately(isDoorOpenLabel.getVisibleRect());
    }
    
    /**
     * Sets the "number of passengers" label on the frame.
     * 
     * @param i the number of current passengers
     */
    private void setNumPassengers(int i) {
        this.numberOfPassengersLabel.setText(String.valueOf(i));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bus = new Bus();
        covidController = new CovidController(bus);
        internalFrame = new javax.swing.JInternalFrame();
        addPassengerSpinner = new javax.swing.JSpinner();
        requestBusButton = new javax.swing.JButton();
        addPassengerStaticLabel = new javax.swing.JLabel();
        isDoorOpenStaticLabel = new javax.swing.JLabel();
        isDoorOpenLabel = new javax.swing.JLabel();
        numberOfPassengersStaticLabel = new javax.swing.JLabel();
        numberOfPassengersLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        internalFrame.setVisible(true);

        addPassengerSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        requestBusButton.setText("Request");
        requestBusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBusButtonActionPerformed(evt);
            }
        });

        addPassengerStaticLabel.setText("Add passengers:");

        isDoorOpenStaticLabel.setText("Door open:");

        isDoorOpenLabel.setText("No");

        numberOfPassengersStaticLabel.setText("Number of passengers:");

        numberOfPassengersLabel.setText(String.valueOf(bus.getNumPassenger()));

        javax.swing.GroupLayout internalFrameLayout = new javax.swing.GroupLayout(internalFrame.getContentPane());
        internalFrame.getContentPane().setLayout(internalFrameLayout);
        internalFrameLayout.setHorizontalGroup(
            internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(internalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(requestBusButton)
                    .addGroup(internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(numberOfPassengersStaticLabel)
                        .addComponent(isDoorOpenStaticLabel)
                        .addComponent(addPassengerStaticLabel)))
                .addGap(18, 18, 18)
                .addGroup(internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addPassengerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isDoorOpenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numberOfPassengersLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        internalFrameLayout.setVerticalGroup(
            internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(internalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfPassengersStaticLabel)
                    .addComponent(numberOfPassengersLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isDoorOpenStaticLabel)
                    .addComponent(isDoorOpenLabel))
                .addGap(49, 49, 49)
                .addGroup(internalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPassengerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPassengerStaticLabel))
                .addGap(37, 37, 37)
                .addComponent(requestBusButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(internalFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(internalFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Calls the routine to update the number of passengers on the Bus
     *  when the `submit` button is pressed, after two seconds.
     * Then, the input fields are restored
     * 
     * @param evt 
     */
    private void requestBusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBusButtonActionPerformed
        this.requestBusButton.setEnabled(false);
        new Thread(() -> {
            try {
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                Logger.getLogger(BusBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
            bus.setNumPassenger((int) addPassengerSpinner.getValue());
            this.requestBusButton.setEnabled(true);
            this.addPassengerSpinner.setValue(1);
        }).start();        
    }//GEN-LAST:event_requestBusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BusBoard().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner addPassengerSpinner;
    private javax.swing.JLabel addPassengerStaticLabel;
    private Bus bus;
    private CovidController covidController;
    private javax.swing.JInternalFrame internalFrame;
    private javax.swing.JLabel isDoorOpenLabel;
    private javax.swing.JLabel isDoorOpenStaticLabel;
    private javax.swing.JLabel numberOfPassengersLabel;
    private javax.swing.JLabel numberOfPassengersStaticLabel;
    private javax.swing.JButton requestBusButton;
    // End of variables declaration//GEN-END:variables

}
